name: 'Plan Infra CI'

# on:
#     pull_request:
#         branches:
#             - main

on:
    push:
        branches:
            - update-script

env:
    FORCE_COLOR: 3
    AWS_REGION: us-east-1
    TF_BUCKET: ${{ secrets.TF_BUCKET }}
    TF_KEY: ${{ secrets.TF_KEY }}
    AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
    AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

jobs:
    check-terraform-format:
        runs-on: ubuntu-latest
        timeout-minutes: 10
        steps:
            - uses: actions/checkout@v2
            - uses: hashicorp/setup-terraform@v1
            - name: Format Terraform
              run: terraform fmt --recursive
            - name: Terraform fmt
              run: terraform fmt -check

    infra-quality:
        runs-on: ubuntu-latest
        timeout-minutes: 10
        strategy:
            matrix:
                python-version: [3.7]
        steps:
            - uses: actions/checkout@v2
            - name: Set up Python 3.8
              uses: actions/setup-python@v1
              with:
                  python-version: 3.8
            - name: Test with Checkov
              id: checkov
              uses: bridgecrewio/checkov-action@master
              with:
                  framework: terraform
                  directory: .
                  config_file: .checkov.yaml

    deploy:
        needs: [check-terraform-format, infra-quality]
        runs-on: ubuntu-latest
        timeout-minutes: 10
        steps:
            - uses: actions/checkout@v2
            - uses: hashicorp/setup-terraform@v1

            - name: Setup Terraform
              uses: hashicorp/setup-terraform@v1
              with:
                terraform_version: "1.1.0"

            - name: Configure AWS credentials
              uses: aws-actions/configure-aws-credentials@v1
              with:
                aws-region: ${{ env.AWS_REGION }}
                aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
                aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}

            - name: Download Terraform state
              run: |
                aws s3 cp s3://${{ env.TF_BUCKET }}/${{ env.TF_KEY }} ${GITHUB_WORKSPACE}/terraform/terraform.tfstate

            - name: Terraform init
              run: terraform init -backend-config="bucket=${{ env.TF_BUCKET }}" -backend-config="key=${{ env.TF_KEY }}"

            - name: Terraform plan
              run: terraform plan
