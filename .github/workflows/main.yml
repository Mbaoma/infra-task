name: CI/CD to deploy app

on:
  push:
    branches: [ main ]
  pull_request:
        branches:  [ main ]
  
permissions: read-all
env:
  FORCE_COLOR: 3
  AWS_REGION: us-west-1
  TF_KEY: my-terraform-state.tfstate

jobs:
  check-terraform-format:
        runs-on: ubuntu-latest
        timeout-minutes: 10
        steps:
            - uses: actions/checkout@v2
            - uses: hashicorp/setup-terraform@v1
            - name: Terraform fmt
              run: terraform fmt -check

  infra-quality:
        runs-on: ubuntu-latest
        timeout-minutes: 10
        strategy:
            matrix:
                python-version: [3.7]
        steps:
            - uses: actions/checkout@v2
            - name: Set up Python 3.8
              uses: actions/setup-python@v1
              with:
                  python-version: 3.8

            - name: Test with Checkov
              id: checkov
              uses: bridgecrewio/checkov-action@master
              with:
                  framework: terraform
                  directory: .
  
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    environment: production

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash
    
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
    
    - name: Terraform initialize
      run: terraform init 
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        TF_ACTION_WORKING_DIR: '.'
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    - name: Terraform Plan
      run: terraform plan -input=false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        TF_ACTION_WORKING_DIR: '.'
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    
    - name: Terraform Apply
      if: github.ref == 'refs/heads/"main"' && github.event_name == 'push'
      run: terraform apply -auto-approve -input=false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        TF_ACTION_WORKING_DIR: '.'
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

  # deploy:
  #   needs: [ check-terraform-format, infra-quality ]
  #   runs-on: ubuntu-latest
  #   steps:
  #   - name: setup nginx
  #     env:
  #         PRIVATE_KEY: ${{ secrets.AWS_PRIVATE_KEY  }}
  #         HOSTNAME : ${{ secrets.HOSTNAME  }}
  #         USER_NAME : ${{ secrets.USER_NAME  }}
  #     run: |
  #       sudo apt update -y 
  #       sudo apt install -y nginx
  #       sudo apt install -y nginx-core
  #       sudo systemctl start nginx
  #       sudo systemctl enable nginx
  #       sudo apt install certbot python3-certbot-nginx -y
  #       sudo echo "<head><title>Hello World</title></head><body><h1>You can edit this page on every pull request.</h1><br>Thank you</body>" | sudo tee /var/www/html/index.nginx-debian.html
  #       sudo nginx -t
        